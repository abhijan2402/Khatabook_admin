{"version":3,"file":"static/js/709.bdbb915b.chunk.js","mappings":"yQAMMA,EAAiB,WAEnB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,gBAAKC,UAAU,2BAA0B,UACrC,mBAAQA,UAAU,0CAA0CC,QAAS,WALzEH,GAASI,EAAAA,EAAAA,IAAiB,CAAEC,QAAS,yBAA0BC,OAAQ,IAK0B,EAAC,yBAG1G,EAIMC,EAAe,CACjB,CAAEC,KAAM,OAAQC,OAAQ,0CAA2CC,MAAO,oBAAqBC,KAAM,QAASC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,EAAQ,QAAQC,OAAO,eAAgBC,WAAY,YAClM,CAAET,KAAM,SAAUC,OAAQ,0CAA2CC,MAAO,sBAAuBC,KAAM,QAASC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,cACtM,CAAET,KAAM,OAAQC,OAAQ,0CAA2CC,MAAO,oBAAqBC,KAAM,QAASC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,aAClM,CAAET,KAAM,SAAUC,OAAQ,0CAA2CC,MAAO,sBAAuBC,KAAM,UAAWC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,YACxM,CAAET,KAAM,QAASC,OAAQ,0CAA2CC,MAAO,qBAAsBC,KAAM,UAAWC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,cACtM,CAAET,KAAM,OAAQC,OAAQ,0CAA2CC,MAAO,oBAAqBC,KAAM,UAAWC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,aAyFxM,MArFA,WAGI,OAA8BC,EAAAA,EAAAA,UAASX,GAAa,eAA7CY,EAAO,KAAEC,EAAU,KAUpBC,EAAQ,yCAAG,wHAEcC,MAAM,yDAAyD,KAAD,EAAvE,IAARC,EAAQ,QAEAC,GAAG,CAAD,qBACN,IAAIC,MAAM,+BAA+B,KAAD,kBAG/BF,EAASG,OAAO,KAAD,EAA5BC,EAAI,OACVC,QAAQC,IAAQ,OAAJF,QAAI,IAAJA,GAAc,QAAV,EAAJA,EAAMJ,gBAAQ,WAAV,EAAJ,EAAgBO,UAAW,YACvCV,EAAe,OAAJO,QAAI,IAAJA,GAAc,QAAV,EAAJA,EAAMJ,gBAAQ,WAAV,EAAJ,EAAgBO,WAE3B,kDAGAF,QAAQC,IAAI,EAAD,IAEX,0DAEP,kBAnBa,mCAyBd,OALAE,EAAAA,EAAAA,YAAU,WACNV,GACJ,GAAG,KAIC,+BACI,SAACW,EAAA,EAAS,CAACC,MAAM,gBAAgBC,UAAU,OAAOnC,gBAAgB,SAACA,EAAc,IAAI,UAGjF,gBAAKG,UAAU,yBAAwB,UACnC,mBAAOA,UAAU,eAAc,WAC3B,4BACI,2BACI,kCACA,sCACA,wCACA,qCACA,0CACA,4CAGR,2BAEQiB,EAAQgB,KAAI,SAACC,EAAGC,GACZ,OACI,2BACI,yBACI,gBAAKnC,UAAU,8BAA6B,UACxC,0BACI,gBAAKA,UAAU,YAAW,SAAEkC,EAAE5B,cAI1C,wBAAK4B,EAAE1B,SACP,wBAAKG,IAAOuB,EAAEE,WAAWtB,OAAO,wBAChC,wBAAKoB,EAAEG,WACP,wBAAKH,EAAEI,eACP,wBAAKJ,EAAEK,aAZFJ,EAejB,cAQhC,ECjGA,MAbA,WACI,IAAMrC,GAAWC,EAAAA,EAAAA,MAOjB,OALA8B,EAAAA,EAAAA,YAAU,WACN/B,GAAS0C,EAAAA,EAAAA,IAAa,CAAET,MAAO,iBACnC,GAAG,KAIC,SAAC,EAAI,GAEb,C","sources":["features/settings/team/index.js","pages/protected/Team.js"],"sourcesContent":["import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"\r\nimport { showNotification } from '../../common/headerSlice'\r\n\r\nconst TopSideButtons = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addNewTeamMember = () => {\r\n        dispatch(showNotification({ message: \"Add New Member clicked\", status: 1 }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"inline-block float-right\">\r\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => addNewTeamMember()}>Invite New</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst TEAM_MEMBERS = [\r\n    { name: \"Alex\", avatar: \"https://reqres.in/img/faces/1-image.jpg\", email: \"alex@dashwind.com\", role: \"Owner\", joinedOn: moment(new Date()).add(-5 * 1, 'days').format(\"DD MMM YYYY\"), lastActive: \"5 hr ago\" },\r\n    { name: \"Ereena\", avatar: \"https://reqres.in/img/faces/2-image.jpg\", email: \"ereena@dashwind.com\", role: \"Admin\", joinedOn: moment(new Date()).add(-5 * 2, 'days').format(\"DD MMM YYYY\"), lastActive: \"15 min ago\" },\r\n    { name: \"John\", avatar: \"https://reqres.in/img/faces/3-image.jpg\", email: \"jhon@dashwind.com\", role: \"Admin\", joinedOn: moment(new Date()).add(-5 * 3, 'days').format(\"DD MMM YYYY\"), lastActive: \"20 hr ago\" },\r\n    { name: \"Matrix\", avatar: \"https://reqres.in/img/faces/4-image.jpg\", email: \"matrix@dashwind.com\", role: \"Manager\", joinedOn: moment(new Date()).add(-5 * 4, 'days').format(\"DD MMM YYYY\"), lastActive: \"1 hr ago\" },\r\n    { name: \"Virat\", avatar: \"https://reqres.in/img/faces/5-image.jpg\", email: \"virat@dashwind.com\", role: \"Support\", joinedOn: moment(new Date()).add(-5 * 5, 'days').format(\"DD MMM YYYY\"), lastActive: \"40 min ago\" },\r\n    { name: \"Miya\", avatar: \"https://reqres.in/img/faces/6-image.jpg\", email: \"miya@dashwind.com\", role: \"Support\", joinedOn: moment(new Date()).add(-5 * 7, 'days').format(\"DD MMM YYYY\"), lastActive: \"5 hr ago\" },\r\n\r\n]\r\n\r\nfunction Team() {\r\n\r\n\r\n    const [members, setMembers] = useState(TEAM_MEMBERS)\r\n\r\n\r\n    const getRoleComponent = (role) => {\r\n        if (role === \"Admin\") return <div className=\"badge badge-secondary\">{role}</div>\r\n        if (role === \"Manager\") return <div className=\"badge\">{role}</div>\r\n        if (role === \"Owner\") return <div className=\"badge badge-primary\">{role}</div>\r\n        if (role === \"Support\") return <div className=\"badge badge-accent\">{role}</div>\r\n        else return <div className=\"badge badge-ghost\">{role}</div>\r\n    }\r\n    const FetchAPi = async () => {\r\n        try {\r\n            const response = await fetch('http://192.168.22.185:3000/api/admin/get-all-customer');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(data?.response?.customers, \"DATATTAT\");\r\n            setMembers(data?.response?.customers)\r\n            // setData(data); // Uncomment if you are using state to store the fetched data\r\n            // setLoading(false); // Uncomment if you have a loading state\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            // setError(error); // Uncomment if you are using state to handle errors\r\n            // setLoading(false); // Uncomment if you have a loading state\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        FetchAPi()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <TitleCard title=\"Customer list\" topMargin=\"mt-2\" TopSideButtons={<TopSideButtons />}>\r\n\r\n                {/* Team Member list in table format loaded constant */}\r\n                <div className=\"overflow-x-auto w-full\">\r\n                    <table className=\"table w-full\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email Id</th>\r\n                                <th>created On</th>\r\n                                <th>Address</th>\r\n                                <th>Phone Number</th>\r\n                                <th>Wallet Id</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                members.map((l, k) => {\r\n                                    return (\r\n                                        <tr key={k}>\r\n                                            <td>\r\n                                                <div className=\"flex items-center space-x-3\">\r\n                                                    <div>\r\n                                                        <div className=\"font-bold\">{l.name}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{l.email}</td>\r\n                                            <td>{moment(l.createdAt).format(\"YYYY-MM-DD HH:MM \")}</td>\r\n                                            <td>{l.address}</td>\r\n                                            <td>{l.phoneNumber}</td>\r\n                                            <td>{l.walletId}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Team","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport Team from '../../features/settings/team'\r\n\r\nfunction InternalPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title: \"Team Members\" }))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Team />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["TopSideButtons","dispatch","useDispatch","className","onClick","showNotification","message","status","TEAM_MEMBERS","name","avatar","email","role","joinedOn","moment","Date","add","format","lastActive","useState","members","setMembers","FetchAPi","fetch","response","ok","Error","json","data","console","log","customers","useEffect","TitleCard","title","topMargin","map","l","k","createdAt","address","phoneNumber","walletId","setPageTitle"],"sourceRoot":""}