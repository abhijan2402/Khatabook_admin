{"version":3,"file":"static/js/355.76b49375.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart: TypedChartComponent = forwardRef(\n  ChartComponent\n) as TypedChartComponent;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","noop","uid","id","isNullOrUndef","type","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","keyResolvers","v","x","y","_getKeyResolver","tmp","split","push","_splitKey","obj","resolveObjectKey","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","c","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","colorLib","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","init","formats","diff","startOf","endOf","members","DateAdapterBase","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","tgt","subBounds","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","positioners","WeakMap","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","excluded","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Bar","Doughnut","Pie","Scatter"],"sourceRoot":""}