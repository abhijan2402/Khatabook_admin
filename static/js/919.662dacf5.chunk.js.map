{"version":3,"file":"static/js/919.662dacf5.chunk.js","mappings":"kLA6BA,IA1BA,SAAmB,GAAiD,IAA/CA,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAC/C,OACE,iBAAKC,UAAW,0CAA4CF,GAAa,QAAQ,WAG/E,SAAC,IAAQ,CAACG,WAAYF,EAAiB,eAAiB,GAAG,SACxDH,KAQH,gBAAKI,UAAU,kBAGf,gBAAKA,UAAU,iCAAgC,SAC5CH,MAKT,C,oECHA,IApBA,SAAmB,GAAwG,IAAvGK,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAAYC,EAAI,EAAJA,KAAMC,EAAc,EAAdA,eAAgBC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YAAaC,EAAe,EAAfA,gBAAiBC,EAAU,EAAVA,WAE1G,GAA0BC,EAAAA,EAAAA,UAASJ,GAAa,eAAzCK,EAAK,KAAEC,EAAQ,KAOtB,OACI,iBAAKZ,UAAS,8BAAyBK,GAAiB,WACpD,kBAAOL,UAAU,QAAO,UACpB,iBAAMA,UAAW,gCAAkCG,EAAW,SAAED,OAEpE,kBAAOE,KAAMA,GAAQ,OAAQO,MAAOA,EAAOJ,YAAaA,GAAe,GAAIM,SAAU,SAACC,GAAC,OAVrEC,EAU2FD,EAAEE,OAAOL,MAT1HC,EAASG,QACTP,EAAgB,CAACC,WAAAA,EAAYE,MAAQI,IAFhB,IAACA,CAU0G,EAACf,UAAU,oCAGnJ,C,iDCdA,IANA,SAAmB,GAAwB,IAAvBC,EAAU,EAAVA,WAAYJ,EAAQ,EAARA,SAC5B,OACI,cAAGG,UAAS,kCAA6BC,GAAa,SAAEJ,GAEhE,C,iDCEA,IANA,SAAkB,GAA2B,IAAzBI,EAAU,EAAVA,WAAYJ,EAAQ,EAARA,SAC5B,OACI,gBAAKG,UAAS,gCAA2BC,GAAa,SAAEJ,GAEhE,C,6KC8GA,MArGA,YAEqBoB,EAAAA,EAAAA,MAAjB,IACA,GAAyCC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAC1E,GADyB,EAAjBC,kBAA4B,EAATC,WACaZ,EAAAA,EAAAA,UAASa,aAAaC,QAAQ,WAAS,eAAxEC,EAAY,KAAEC,EAAe,KA0BpC,OAxBAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,cAAY,GACS,OAAjBH,IACII,OAAOC,YAAcD,OAAOC,WAAW,gCAAgCC,QACvEL,EAAgB,QAEhBA,EAAgB,SAI5B,GAAG,KAeC,+BACI,iBAAK1B,UAAU,4DAA2D,WAItE,iBAAKA,UAAU,GAAE,WACb,kBAAOgC,QAAQ,sBAAsBhC,UAAU,0CAAyC,UACpF,SAAC,IAAS,CAACA,UAAU,4BACzB,eAAIA,UAAU,8BAA6B,SAAE,oBAKjD,gBAAKA,UAAU,mBAuD/B,E,qEC1GMD,EAAiB,WAEnB,IAAMkC,GAAWhB,EAAAA,EAAAA,MAMjB,OACI,gBAAKjB,UAAU,2BAA0B,UACrC,mBAAQA,UAAU,0CAA0CkC,QAAS,WALzED,GAASE,EAAAA,EAAAA,IAAiB,CAAEC,QAAS,yBAA0BC,OAAQ,IAK0B,EAAC,yBAG1G,EAIMC,EAAe,CACjB,CAAEC,KAAM,OAAQC,OAAQ,0CAA2CC,MAAO,oBAAqBC,KAAM,QAASC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,EAAQ,QAAQC,OAAO,eAAgBC,WAAY,YAClM,CAAET,KAAM,SAAUC,OAAQ,0CAA2CC,MAAO,sBAAuBC,KAAM,QAASC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,cACtM,CAAET,KAAM,OAAQC,OAAQ,0CAA2CC,MAAO,oBAAqBC,KAAM,QAASC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,aAClM,CAAET,KAAM,SAAUC,OAAQ,0CAA2CC,MAAO,sBAAuBC,KAAM,UAAWC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,YACxM,CAAET,KAAM,QAASC,OAAQ,0CAA2CC,MAAO,qBAAsBC,KAAM,UAAWC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,cACtM,CAAET,KAAM,OAAQC,OAAQ,0CAA2CC,MAAO,oBAAqBC,KAAM,UAAWC,SAAUC,IAAO,IAAIC,MAAQC,KAAI,GAAQ,QAAQC,OAAO,eAAgBC,WAAY,aAsGxM,MAlGA,WAGI,OAA8BtC,EAAAA,EAAAA,UAAS4B,GAAa,eAA7CW,EAAO,KAAEC,EAAU,KAUpBC,EAAQ,yCAAG,+FAGuC,OAFpDC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,SACZD,QAAQC,IAAI,wCAAwC,kBAGzBC,MAAM,wDAAwD,KAAD,EAAtE,IAARC,EAAQ,QAEAC,GAAG,CAAD,qBACN,IAAIC,MAAM,+BAA+B,KAAD,mBAG/BF,EAASG,OAAO,KAAD,GAA5BC,EAAI,OACVP,QAAQC,IAAQ,OAAJM,QAAI,IAAJA,GAAc,QAAV,EAAJA,EAAMJ,gBAAQ,WAAV,EAAJ,EAAgBK,UAAW,YACvCV,EAAe,OAAJS,QAAI,IAAJA,GAAc,QAAV,EAAJA,EAAMJ,gBAAQ,WAAV,EAAJ,EAAgBK,WAE3B,kDAGAR,QAAQC,IAAI,EAAD,IAEX,0DAEP,kBAvBa,mCA6Bd,OALA1B,EAAAA,EAAAA,YAAU,WACNwB,GACJ,GAAG,KAIC,+BACI,SAACU,EAAA,EAAS,CAACjE,MAAM,cAAcE,UAAU,OAAOC,gBAAgB,SAACA,EAAc,IAAI,UAG/E,gBAAKC,UAAU,yBAAwB,UACnC,mBAAOA,UAAU,eAAc,WAC3B,4BACI,2BACI,kCACA,sCACA,wCACA,qCACA,0CACA,uCACA,+CACA,sDACA,sCACA,yCAGR,2BAEQiD,EAAQa,KAAI,SAACC,EAAGC,GAAO,IAAD,UAClB,OACI,2BACI,yBACI,gBAAKhE,UAAU,8BAA6B,UACxC,0BACI,gBAAKA,UAAU,YAAW,SAAE+D,EAAExB,cAI1C,wBAAKwB,EAAEtB,SACP,wBAAKG,IAAOmB,EAAEE,WAAWlB,OAAO,wBAChC,wBAAKgB,EAAEG,WACP,wBAAKH,EAAEI,eACP,wBAAa,QAAb,EAAKJ,EAAEK,cAAM,aAAR,EAAUC,aACf,wBAAa,QAAb,EAAKN,EAAEK,cAAM,aAAR,EAAUE,oBACf,wBAAK1B,IAAe,QAAT,EAACmB,EAAEK,cAAM,aAAR,EAAUG,eAAexB,OAAO,wBAC5C,wBAAa,QAAb,EAAKgB,EAAEK,cAAM,aAAR,EAAUI,YACf,wBAAa,QAAb,EAAKT,EAAEK,cAAM,aAAR,EAAUK,YAhBVT,EAoBjB,cAQhC,EC3HMU,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,oDAAsC,IAC7DC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,6BAAoC,IACzDE,GAAUF,EAAAA,EAAAA,OAAK,kBAAM,6BAAgC,IACrDG,GAAQH,EAAAA,EAAAA,OAAK,kBAAM,4BAAkC,IACrDI,GAASJ,EAAAA,EAAAA,OAAK,kBAAM,qDAAmC,IACvDK,GAAQL,EAAAA,EAAAA,OAAK,kBAAM,4BAAkC,IACrDM,GAAcN,EAAAA,EAAAA,OAAK,kBAAM,6BAAwC,IACjEO,GAAOP,EAAAA,EAAAA,OAAK,kBAAM,6BAAiC,IACnDQ,GAAQR,EAAAA,EAAAA,OAAK,kBAAM,6BAAkC,IAkE3D,EA3De,CACb,CACES,KAAM,aACNC,UAAWX,GAEb,CACEU,KAAM,WACNC,UAAWT,GAEb,CACEQ,KAAM,SACNC,UAAWL,GAEb,CACEI,KAAM,iBACNC,UAAWH,GAEb,CACEE,KAAM,0BACNC,UAAWC,GAEb,CACEF,KAAM,oBACNC,WA7BoBV,EAAAA,EAAAA,OAAK,kBAAM,6BAA4C,KA+B7E,CACES,KAAM,oBACNC,UAAWF,GAEb,CACEC,KAAM,mBACNC,WApCmBV,EAAAA,EAAAA,OAAK,kBAAM,6BAAiC,KAsCjE,CACES,KAAM,YACNC,WAvCgBV,EAAAA,EAAAA,OAAK,kBAAM,qDAA8B,KAyC3D,CACES,KAAM,cACNC,WA1CkBV,EAAAA,EAAAA,OAAK,kBAAM,qDAAgC,KA4C/D,CACES,KAAM,eACNC,UAAWJ,GAEb,CACEG,KAAM,UACNC,UAAWN,GAEb,CACEK,KAAM,OACNC,UAAWR,GAEb,CACEO,KAAM,SACNC,UAAWP,I,UCnETD,GAAUF,EAAAA,EAAAA,OAAK,kBAAM,6BAAgC,IA8C3D,MA3CA,WACI,IAAMY,GAAiBC,EAAAA,EAAAA,QAAO,MACvBlE,GAAaJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAA9CE,UAWP,OAPAK,EAAAA,EAAAA,YAAU,WACN4D,EAAeE,QAAQC,OAAO,CAC1BC,IAAK,EACLC,SAAU,UAEhB,GAAG,CAACtE,KAGF,iBAAKtB,UAAU,gCAA+B,WAC1C,SAAC,EAAM,KACP,kBAAMA,UAAU,gDAAgD6F,IAAKN,EAAe,WAChF,SAAC,EAAAO,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAe,IAAI,UAChC,UAAC,KAAM,WAECC,EAAAA,KAAW,SAACC,EAAOC,GACf,OACI,SAAC,KAAK,CAEFC,OAAO,EACPhB,KAAI,UAAKc,EAAMd,MACfiB,SAAS,SAACH,EAAMb,UAAS,KAHpBc,EAMjB,KAIJ,SAAC,KAAK,CAACf,KAAK,IAAIiB,SAAS,SAAC,EAAO,YAG7C,gBAAKrG,UAAU,cAI/B,E,6BC9BMsG,EAAW,UA8GjB,EA3Ge,CAEb,CACElB,KAAM,IACNmB,MAAM,SAAC,IAAc,CAACvG,UAAWsG,IACjC/D,KAAM,YAER,CACE6C,KAAM,8BACNmB,MAAM,SAAC,IAAc,CAACvG,UAAWsG,IACjC/D,KAAM,Y,6BCcV,MA3CA,SAAwB,GAAuB,IAAtBiE,EAAO,EAAPA,QAASjE,EAAI,EAAJA,KAAMgE,EAAI,EAAJA,KAC9BE,GAAWC,EAAAA,EAAAA,MACjB,GAAoChG,EAAAA,EAAAA,WAAS,GAAM,eAA5CiG,EAAU,KAAEC,EAAa,KAQhC,OAJAjF,EAAAA,EAAAA,YAAU,WACH6E,EAAQK,QAAO,SAAAC,GAAM,OAAOA,EAAE1B,OAASqB,EAASM,QAAQ,IAAG,IAAGH,GAAc,EACnF,GAAG,KAGC,iBAAK5G,UAAU,WAAU,WAGrB,iBAAKA,UAAU,SAASkC,QAAS,kBAAM0E,GAAeD,EAAW,EAAC,UAC7DJ,EAAI,IAAGhE,GACR,SAAC,IAAe,CAACvC,UAAW,oEAAsE2G,EAAa,aAAe,UAIlI,gBAAK3G,UAAW,YAAa2G,EAAa,GAAK,UAAU,UACrD,eAAI3G,UAAS,oBAAsB,SAE/BwG,EAAQ1C,KAAI,SAACgD,EAAG9C,GACZ,OACI,yBACI,UAAC,KAAI,CAACgD,GAAIF,EAAE1B,KAAK,UACZ0B,EAAEP,KAAI,IAAGO,EAAEvE,KAEJkE,EAASM,UAAYD,EAAE1B,MAAQ,iBAAMpF,UAAU,kFAC3C,cAAY,SAAkB,SALzCgE,EAUjB,UAMpB,ECHA,MAvCA,WACI,IAAMyC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,iBAAK1G,UAAU,eAAc,WACzB,kBAAOgC,QAAQ,sBAAsBhC,UAAU,oBAC/C,gBAAIA,UAAU,gDAA+C,WACzD,gBAAIA,UAAU,6BAA4B,WAEtC,SAAC,KAAI,CAACgH,GAAI,qBAAqB,mBAAa,OAE5Cf,EAAAA,KAAW,SAACC,EAAOlC,GACf,OACI,eAAIhE,UAAU,GAAE,SAERkG,EAAMM,SACF,SAAC,GAAc,UAAKN,KACnB,UAAC,KAAO,CACLe,KAAG,EACHD,GAAId,EAAMd,KACVpF,UAAW,gBAAGkH,EAAQ,EAARA,SAAQ,gBAAUA,EAAW,8BAAgC,cAAa,EAAG,UAC1FhB,EAAMK,KAAI,IAAGL,EAAM3D,KAEhBkE,EAASM,WAAab,EAAMd,MAAQ,iBAAMpF,UAAU,wEAChD,cAAY,SAAkB,SAXhCgE,EAkB9B,SAMpB,E,uCC3BA,MAdA,WACI,OACI,+BAEQ,OAAImD,MAAM,KAAKrD,KAAI,SAACsD,EAAGC,GACnB,OAAO,gBAAarH,UAAW,8CAAgDqH,EAAI,EAAI,eAAiB,IAAI,SACnGA,EAAI,IAAM,EAAC,yHADHA,EAGrB,KAIhB,EC6CA,MAlDA,WAAwB,IAAD,EAEnB,GAAgDnG,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMmG,WAAW,IAA/EC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAarG,EAAM,EAANA,OAChCa,GAAWhB,EAAAA,EAAAA,MAEXyG,EAAQ,SAAC5G,GACbmB,GAAS0F,EAAAA,EAAAA,IAAiB7G,GAC5B,EAIA,OACI,iBAAKd,UAAW,wFAA0FuH,EAAS,+DAAiE,0DAA0D,WAE1O,oBAASvH,UAAY,6HAA+HuH,EAAS,kBAAoB,sBAAsB,UAE/L,iBAAKvH,UAAU,uCAAsC,WAGjD,iBAAKA,UAAU,uCAAsC,WACjD,mBAAQA,UAAU,+CAA+CkC,QAAS,kBAAMwF,GAAO,EAAC,UACxF,SAAC,IAAS,CAAC1H,UAAU,eAErB,iBAAMA,UAAU,yBAAwB,SAAEoB,QAK9C,gBAAKpB,UAAU,8BAA6B,UACxC,gBAAKA,UAAU,uBAAsB,UAGjC,eACS4H,EAAAA,mBAAAA,cAAmC,SAAC,GAA2B,kBAAKH,GAAW,IAAEE,iBAAkBD,OAAQ,SAC3GE,EAAAA,mBAAAA,SAA8B,oBAAW,GAChDJ,aAUtB,oBAASxH,UAAU,mCAAmCkC,QAAS,kBAAMwF,GAAO,MAGxF,E,8DChDMG,GAAmB,CACrBC,WAAa,GACbC,UAAY,GACZtF,MAAQ,IAmDZ,OAhDA,SAA0B,GAAc,IAAbuF,EAAU,EAAVA,WACjB/F,GAAWhB,EAAAA,EAAAA,MACjB,GAA8BP,EAAAA,EAAAA,WAAS,GAAM,eAC7C,GADc,KAAY,MACcA,EAAAA,EAAAA,UAAS,KAAG,eAA7CuH,EAAY,KAAEC,EAAe,KACpC,GAA8BxH,EAAAA,EAAAA,UAASmH,IAAiB,eAAjDM,EAAO,KAAEC,EAAU,KAoBpB5H,EAAkB,SAAH,GAA6B,IAAxBC,EAAU,EAAVA,WAAYE,EAAK,EAALA,MAClCuH,EAAgB,IAChBE,GAAW,kBAAID,GAAO,cAAG1H,EAAcE,IAC3C,EAEA,OACI,iCAEI,SAAC0H,GAAA,EAAS,CAACjI,KAAK,OAAOE,aAAc6H,EAAQL,WAAYrH,WAAW,aAAaJ,eAAe,OAAOH,WAAW,aAAaM,gBAAiBA,KAEhJ,SAAC6H,GAAA,EAAS,CAACjI,KAAK,OAAOE,aAAc6H,EAAQJ,UAAWtH,WAAW,YAAYJ,eAAe,OAAOH,WAAW,YAAYM,gBAAiBA,KAE7I,SAAC6H,GAAA,EAAS,CAACjI,KAAK,QAAQE,aAAc6H,EAAQ1F,MAAOhC,WAAW,QAAQJ,eAAe,OAAOH,WAAW,WAAWM,gBAAiBA,KAGrI,SAAC8H,GAAA,EAAS,CAACrI,WAAW,QAAO,SAAEgI,KAC/B,iBAAKjI,UAAU,eAAc,WACzB,mBAASA,UAAU,gBAAgBkC,QAAS,kBAAM8F,GAAY,EAAC,qBAC/D,mBAAShI,UAAU,uBAAuBkC,QAAS,kBAnC3C,WAChB,GAAiC,KAA9BiG,EAAQL,WAAWS,OAAc,OAAOL,EAAgB,2BACtD,GAA4B,KAAzBC,EAAQ1F,MAAM8F,OAAc,OAAOL,EAAgB,yBAEvD,IAAIM,EAAa,CACb,GAAM,EACN,MAASL,EAAQ1F,MACjB,WAAc0F,EAAQL,WACtB,UAAaK,EAAQJ,UACrB,OAAU,2CAEd9F,GAASwG,EAAAA,GAAAA,IAAW,CAACD,WAAAA,KACrBvG,GAASE,EAAAA,EAAAA,IAAiB,CAACC,QAAU,kBAAmBC,OAAS,KACjE2F,GAER,CAoBqEU,EAAa,EAAC,uBAIvF,EChBA,OApCA,WAAuB,IAAD,EAGlB,GAAqDxH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMwH,KAAK,IAA9EpB,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUoB,EAAI,EAAJA,KAAMnB,EAAW,EAAXA,YAAa7H,EAAK,EAALA,MACtCqC,GAAWhB,EAAAA,EAAAA,MAEXyG,EAAQ,SAAC5G,GACbmB,GAAS+F,EAAAA,EAAAA,IAAWlH,GACtB,EAIA,OACI,+BAII,gBAAKd,UAAS,gBAAWuH,EAAS,aAAe,IAAK,UACtD,iBAAKvH,UAAS,qBAAyB,OAAT4I,EAAgB,YAAc,IAAK,WAC7D,mBAAQ5I,UAAU,+CAA+CkC,QAAS,kBAAMwF,GAAO,EAAC,qBACxF,eAAI1H,UAAU,0CAAyC,SAAEJ,KAKrD,eACUiJ,EAAAA,iBAAAA,cAAiC,SAAC,GAAgB,CAACb,WAAYN,EAAOD,YAAaA,MAAc,SACjGoB,EAAAA,iBAAAA,SAA4B,oBAAW,GAC/CrB,SAMtB,ECKA,OApCA,WACE,IAAMvF,GAAWhB,EAAAA,EAAAA,MACjB,GAAwDC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAAlF0H,EAAsB,EAAtBA,uBAAwBC,EAAqB,EAArBA,sBAW7B,OARFpH,EAAAA,EAAAA,YAAU,WACwB,KAA3BmH,IAC8B,IAA1BC,GAA4BC,EAAAA,GAAAA,QAA4BF,EAAwB,WACtD,IAA1BC,GAA4BC,EAAAA,GAAAA,MAA2BF,EAAwB,SAClF7G,GAASgH,EAAAA,EAAAA,OAEjB,GAAG,CAACH,KAGA,iCAEE,iBAAK9I,UAAU,uBAAsB,WACjC,kBAAOkJ,GAAG,sBAAsB9I,KAAK,WAAWJ,UAAU,mBAC1D,SAAC,EAAW,KACZ,SAAC,EAAW,QAIhB,SAAC,EAAY,KAIb,SAAC,KAAqB,KAGtB,SAAC,GAAW,MAIpB,C,mBC3CAmJ,EAAOC,QAAUC,OAAOC,OAAO,CAC3BT,iBAAmB,CACfU,YAAc,cACdC,aAAe,eACfC,QAAU,IAGd7B,mBAAqB,CACjB8B,aAAe,iB","sources":["components/Cards/TitleCard.js","components/Input/InputText.js","components/Typography/ErrorText.js","components/Typography/Subtitle.js","containers/Header.js","features/settings/vendorTeam/index.js","routes/index.js","containers/PageContent.js","routes/sidebar.js","containers/SidebarSubmenu.js","containers/LeftSidebar.js","features/common/components/NotificationBodyRightDrawer.js","containers/RightSidebar.js","features/leads/components/AddLeadModalBody.js","containers/ModalLayout.js","containers/Layout.js","utils/globalConstantUtil.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n\r\nfunction TitleCard({ title, children, topMargin, TopSideButtons }) {\r\n  return (\r\n    <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n      {/* Title for Card */}\r\n      <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n        {title}\r\n\r\n        {/* Top side button, show only if present */}\r\n        {\r\n          // TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n        }\r\n      </Subtitle>\r\n\r\n      <div className=\"divider mt-2\"></div>\r\n\r\n      {/** Card Body */}\r\n      <div className='h-full w-full pb-6 bg-base-100'>\r\n        {children}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default TitleCard","import { useState } from \"react\"\r\n\r\n\r\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InputText","function ErrorText({styleClass, children}){\r\n    return(\r\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\r\n    )\r\n}\r\n\r\nexport default ErrorText","function Subtitle({ styleClass, children }) {\r\n    return (\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import { themeChange } from 'theme-change'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport BellIcon from '@heroicons/react/24/outline/BellIcon'\r\nimport Bars3Icon from '@heroicons/react/24/outline/Bars3Icon'\r\nimport MoonIcon from '@heroicons/react/24/outline/MoonIcon'\r\nimport SunIcon from '@heroicons/react/24/outline/SunIcon'\r\nimport { openRightDrawer } from '../features/common/rightDrawerSlice';\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\n\r\nimport { NavLink, Routes, Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch()\r\n    const { noOfNotifications, pageTitle } = useSelector(state => state.header)\r\n    const [currentTheme, setCurrentTheme] = useState(localStorage.getItem(\"theme\"))\r\n\r\n    useEffect(() => {\r\n        themeChange(false)\r\n        if (currentTheme === null) {\r\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n                setCurrentTheme(\"dark\")\r\n            } else {\r\n                setCurrentTheme(\"light\")\r\n            }\r\n        }\r\n        // 👆 false parameter is required for react project\r\n    }, [])\r\n\r\n\r\n    // Opening right sidebar for notification\r\n    const openNotification = () => {\r\n        dispatch(openRightDrawer({ header: \"Notifications\", bodyType: RIGHT_DRAWER_TYPES.NOTIFICATION }))\r\n    }\r\n\r\n\r\n    function logoutUser() {\r\n        localStorage.clear();\r\n        window.location.href = '/'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbar  flex justify-between bg-base-100  z-10 shadow-md \">\r\n\r\n\r\n                {/* Menu toogle for mobile view or small screen */}\r\n                <div className=\"\">\r\n                    <label htmlFor=\"left-sidebar-drawer\" className=\"btn btn-primary drawer-button lg:hidden\">\r\n                        <Bars3Icon className=\"h-5 inline-block w-5\" /></label>\r\n                    <h1 className=\"text-2xl font-semibold ml-2\">{\"PayRu Admin\"}</h1>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"order-last\">\r\n\r\n                    {/* Multiple theme selection, uncomment this if you want to enable multiple themes selection, \r\n                also includes corporate and retro themes in tailwind.config file */}\r\n\r\n                    {/* <select className=\"select select-sm mr-4\" data-choose-theme>\r\n                    <option disabled selected>Theme</option>\r\n                    <option value=\"light\">Default</option>\r\n                    <option value=\"dark\">Dark</option>\r\n                    <option value=\"corporate\">Corporate</option>\r\n                    <option value=\"retro\">Retro</option>\r\n                </select> */}\r\n\r\n\r\n                    {/* Light and dark theme selection toogle **/}\r\n                    {/* <label className=\"swap \">\r\n                        <input type=\"checkbox\" />\r\n                        <SunIcon data-set-theme=\"light\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \" + (currentTheme === \"dark\" ? \"swap-on\" : \"swap-off\")} />\r\n                        <MoonIcon data-set-theme=\"dark\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \" + (currentTheme === \"light\" ? \"swap-on\" : \"swap-off\")} />\r\n                    </label> */}\r\n\r\n\r\n                    {/* Notification icon */}\r\n                    {/* <button className=\"btn btn-ghost ml-4  btn-circle\" onClick={() => openNotification()}>\r\n                    <div className=\"indicator\">\r\n                        <BellIcon className=\"h-6 w-6\"/>\r\n                        {noOfNotifications > 0 ? <span className=\"indicator-item badge badge-secondary badge-sm\">{noOfNotifications}</span> : null }\r\n                    </div>\r\n                </button> */}\r\n\r\n\r\n                    {/* Profile icon, opening menu on click */}\r\n                    {/* <div className=\"dropdown dropdown-end ml-4\">\r\n                    <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\r\n                        <div className=\"w-10 rounded-full\">\r\n                        <img src=\"https://placeimg.com/80/80/people\" alt=\"profile\" />\r\n                        </div>\r\n                    </label>\r\n                    <ul tabIndex={0} className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\">\r\n                        <li className=\"justify-between\">\r\n                        <Link to={'/app/settings-profile'}>\r\n                            Profile Settings\r\n                            <span className=\"badge\">New</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=''><Link to={'/app/settings-billing'}>Bill History</Link></li>\r\n                        <div className=\"divider mt-0 mb-0\"></div>\r\n                        <li><a onClick={logoutUser}>Logout</a></li>\r\n                    </ul>\r\n                </div> */}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"\r\nimport { showNotification } from '../../common/headerSlice'\r\n\r\nconst TopSideButtons = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addNewTeamMember = () => {\r\n        dispatch(showNotification({ message: \"Add New Member clicked\", status: 1 }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"inline-block float-right\">\r\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => addNewTeamMember()}>Invite New</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst TEAM_MEMBERS = [\r\n    { name: \"Alex\", avatar: \"https://reqres.in/img/faces/1-image.jpg\", email: \"alex@dashwind.com\", role: \"Owner\", joinedOn: moment(new Date()).add(-5 * 1, 'days').format(\"DD MMM YYYY\"), lastActive: \"5 hr ago\" },\r\n    { name: \"Ereena\", avatar: \"https://reqres.in/img/faces/2-image.jpg\", email: \"ereena@dashwind.com\", role: \"Admin\", joinedOn: moment(new Date()).add(-5 * 2, 'days').format(\"DD MMM YYYY\"), lastActive: \"15 min ago\" },\r\n    { name: \"John\", avatar: \"https://reqres.in/img/faces/3-image.jpg\", email: \"jhon@dashwind.com\", role: \"Admin\", joinedOn: moment(new Date()).add(-5 * 3, 'days').format(\"DD MMM YYYY\"), lastActive: \"20 hr ago\" },\r\n    { name: \"Matrix\", avatar: \"https://reqres.in/img/faces/4-image.jpg\", email: \"matrix@dashwind.com\", role: \"Manager\", joinedOn: moment(new Date()).add(-5 * 4, 'days').format(\"DD MMM YYYY\"), lastActive: \"1 hr ago\" },\r\n    { name: \"Virat\", avatar: \"https://reqres.in/img/faces/5-image.jpg\", email: \"virat@dashwind.com\", role: \"Support\", joinedOn: moment(new Date()).add(-5 * 5, 'days').format(\"DD MMM YYYY\"), lastActive: \"40 min ago\" },\r\n    { name: \"Miya\", avatar: \"https://reqres.in/img/faces/6-image.jpg\", email: \"miya@dashwind.com\", role: \"Support\", joinedOn: moment(new Date()).add(-5 * 7, 'days').format(\"DD MMM YYYY\"), lastActive: \"5 hr ago\" },\r\n\r\n]\r\n\r\nfunction VendorTeam() {\r\n\r\n\r\n    const [members, setMembers] = useState(TEAM_MEMBERS)\r\n\r\n\r\n    const getRoleComponent = (role) => {\r\n        if (role === \"Admin\") return <div className=\"badge badge-secondary\">{role}</div>\r\n        if (role === \"Manager\") return <div className=\"badge\">{role}</div>\r\n        if (role === \"Owner\") return <div className=\"badge badge-primary\">{role}</div>\r\n        if (role === \"Support\") return <div className=\"badge badge-accent\">{role}</div>\r\n        else return <div className=\"badge badge-ghost\">{role}</div>\r\n    }\r\n    const FetchAPi = async () => {\r\n        console.log('====================================');\r\n        console.log(\"hiiii\");\r\n        console.log('====================================');\r\n\r\n        try {\r\n            const response = await fetch('http://192.168.22.185:3000/api/admin/get-all-venders');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(data?.response?.customers, \"DATATTAT\");\r\n            setMembers(data?.response?.customers)\r\n            // setData(data); // Uncomment if you are using state to store the fetched data\r\n            // setLoading(false); // Uncomment if you have a loading state\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            // setError(error); // Uncomment if you are using state to handle errors\r\n            // setLoading(false); // Uncomment if you have a loading state\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        FetchAPi()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <TitleCard title=\"Vendor list\" topMargin=\"mt-2\" TopSideButtons={<TopSideButtons />}>\r\n\r\n                {/* Team Member list in table format loaded constant */}\r\n                <div className=\"overflow-x-auto w-full\">\r\n                    <table className=\"table w-full\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email Id</th>\r\n                                <th>created On</th>\r\n                                <th>Address</th>\r\n                                <th>Phone Number</th>\r\n                                <th>Shop Name</th>\r\n                                <th>Subscription type</th>\r\n                                <th>Subscription Expiry date</th>\r\n                                <th>Category</th>\r\n                                <th>Rating</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                members.map((l, k) => {\r\n                                    return (\r\n                                        <tr key={k}>\r\n                                            <td>\r\n                                                <div className=\"flex items-center space-x-3\">\r\n                                                    <div>\r\n                                                        <div className=\"font-bold\">{l.name}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{l.email}</td>\r\n                                            <td>{moment(l.createdAt).format(\"YYYY-MM-DD HH:MM \")}</td>\r\n                                            <td>{l.address}</td>\r\n                                            <td>{l.phoneNumber}</td>\r\n                                            <td>{l.shopId?.ownerName}</td>\r\n                                            <td>{l.shopId?.subscriptionType}</td>\r\n                                            <td>{moment(l.shopId?.subExpireDate).format(\"YYYY-MM-DD HH:MM \")}</td>\r\n                                            <td>{l.shopId?.category}</td>\r\n                                            <td>{l.shopId?.ratings}</td>\r\n\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default VendorTeam","// All components mapping with path for internal routes\r\n\r\nimport { lazy } from 'react'\r\nimport VendorTeam from '../features/settings/vendorTeam'\r\n\r\nconst Dashboard = lazy(() => import('../pages/protected/Dashboard'))\r\nconst Welcome = lazy(() => import('../pages/protected/Welcome'))\r\nconst Page404 = lazy(() => import('../pages/protected/404'))\r\nconst Blank = lazy(() => import('../pages/protected/Blank'))\r\nconst Charts = lazy(() => import('../pages/protected/Charts'))\r\nconst Leads = lazy(() => import('../pages/protected/Leads'))\r\nconst Integration = lazy(() => import('../pages/protected/Integration'))\r\nconst Team = lazy(() => import('../pages/protected/Team'))\r\nconst Bills = lazy(() => import('../pages/protected/Bills'))\r\nconst ProfileSettings = lazy(() => import('../pages/protected/ProfileSettings'))\r\nconst GettingStarted = lazy(() => import('../pages/GettingStarted'))\r\nconst DocFeatures = lazy(() => import('../pages/DocFeatures'))\r\nconst DocComponents = lazy(() => import('../pages/DocComponents'))\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '/dashboard', // the url\r\n    component: Dashboard, // view rendered\r\n  },\r\n  {\r\n    path: '/welcome', // the url\r\n    component: Welcome, // view rendered\r\n  },\r\n  {\r\n    path: '/leads',\r\n    component: Leads,\r\n  },\r\n  {\r\n    path: '/settings-team',\r\n    component: Team,\r\n  },\r\n  {\r\n    path: '/settings-team/customer',\r\n    component: VendorTeam,\r\n  },\r\n  {\r\n    path: '/settings-profile',\r\n    component: ProfileSettings,\r\n  },\r\n  {\r\n    path: '/settings-billing',\r\n    component: Bills,\r\n  },\r\n  {\r\n    path: '/getting-started',\r\n    component: GettingStarted,\r\n  },\r\n  {\r\n    path: '/features',\r\n    component: DocFeatures,\r\n  },\r\n  {\r\n    path: '/components',\r\n    component: DocComponents,\r\n  },\r\n  {\r\n    path: '/integration',\r\n    component: Integration,\r\n  },\r\n  {\r\n    path: '/charts',\r\n    component: Charts,\r\n  },\r\n  {\r\n    path: '/404',\r\n    component: Page404,\r\n  },\r\n  {\r\n    path: '/blank',\r\n    component: Blank,\r\n  },\r\n]\r\n\r\nexport default routes\r\n","import Header from \"./Header\"\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport routes from '../routes'\r\nimport { Suspense, lazy } from 'react'\r\nimport SuspenseContent from \"./SuspenseContent\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nconst Page404 = lazy(() => import('../pages/protected/404'))\r\n\r\n\r\nfunction PageContent(){\r\n    const mainContentRef = useRef(null);\r\n    const {pageTitle} = useSelector(state => state.header)\r\n\r\n\r\n    // Scroll back to top on new page load\r\n    useEffect(() => {\r\n        mainContentRef.current.scroll({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n          });\r\n      }, [pageTitle])\r\n\r\n    return(\r\n        <div className=\"drawer-content flex flex-col \">\r\n            <Header/>\r\n            <main className=\"flex-1 overflow-y-auto pt-8 px-6  bg-base-200\" ref={mainContentRef}>\r\n                <Suspense fallback={<SuspenseContent />}>\r\n                        <Routes>\r\n                            {\r\n                                routes.map((route, key) => {\r\n                                    return(\r\n                                        <Route\r\n                                            key={key}\r\n                                            exact={true}\r\n                                            path={`${route.path}`}\r\n                                            element={<route.component />}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {/* Redirecting unknown url to 404 page */}\r\n                            <Route path=\"*\" element={<Page404 />} />\r\n                        </Routes>\r\n                </Suspense>\r\n                <div className=\"h-16\"></div>\r\n            </main>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default PageContent\r\n","/** Icons are imported separatly to reduce build time */\r\nimport BellIcon from '@heroicons/react/24/outline/BellIcon'\r\nimport DocumentTextIcon from '@heroicons/react/24/outline/DocumentTextIcon'\r\nimport Squares2X2Icon from '@heroicons/react/24/outline/Squares2X2Icon'\r\nimport TableCellsIcon from '@heroicons/react/24/outline/TableCellsIcon'\r\nimport WalletIcon from '@heroicons/react/24/outline/WalletIcon'\r\nimport CodeBracketSquareIcon from '@heroicons/react/24/outline/CodeBracketSquareIcon'\r\nimport DocumentIcon from '@heroicons/react/24/outline/DocumentIcon'\r\nimport ExclamationTriangleIcon from '@heroicons/react/24/outline/ExclamationTriangleIcon'\r\nimport ShieldCheckIcon from '@heroicons/react/24/outline/ShieldCheckIcon'\r\nimport ArrowRightOnRectangleIcon from '@heroicons/react/24/outline/ArrowRightOnRectangleIcon'\r\nimport UserIcon from '@heroicons/react/24/outline/UserIcon'\r\nimport Cog6ToothIcon from '@heroicons/react/24/outline/Cog6ToothIcon'\r\nimport BoltIcon from '@heroicons/react/24/outline/BoltIcon'\r\nimport ChartBarIcon from '@heroicons/react/24/outline/ChartBarIcon'\r\nimport InformationCircleIcon from '@heroicons/react/24/outline/InformationCircleIcon'\r\nimport InboxArrowDownIcon from '@heroicons/react/24/outline/InboxArrowDownIcon'\r\nimport UsersIcon from '@heroicons/react/24/outline/UsersIcon'\r\nimport KeyIcon from '@heroicons/react/24/outline/KeyIcon'\r\nimport DocumentDuplicateIcon from '@heroicons/react/24/outline/DocumentDuplicateIcon'\r\n\r\nconst iconClasses = `h-6 w-6`\r\nconst submenuIconClasses = `h-5 w-5`\r\n\r\nconst routes = [\r\n\r\n  {\r\n    path: '/',\r\n    icon: <Squares2X2Icon className={iconClasses} />,\r\n    name: 'Customer',\r\n  },\r\n  {\r\n    path: '/app/settings-team/customer',\r\n    icon: <Squares2X2Icon className={iconClasses} />,\r\n    name: 'Vendors',\r\n  },\r\n  // {\r\n  //   path: '/app/leads', // url\r\n  //   icon: <InboxArrowDownIcon className={iconClasses} />, // icon component\r\n  //   name: 'Leads', // name that appear in Sidebar\r\n  // },\r\n  // {\r\n  //   path: '/app/charts', // url\r\n  //   icon: <ChartBarIcon className={iconClasses} />, // icon component\r\n  //   name: 'Charts', // name that appear in Sidebar\r\n  // },\r\n  // {\r\n  //   path: '/app/integration', // url\r\n  //   icon: <BoltIcon className={iconClasses} />, // icon component\r\n  //   name: 'Integration', // name that appear in Sidebar\r\n  // },\r\n\r\n  // {\r\n  //   path: '', //no url needed as this has submenu\r\n  //   icon: <DocumentDuplicateIcon className={`${iconClasses} inline`} />, // icon component\r\n  //   name: 'Pages', // name that appear in Sidebar\r\n  //   submenu: [\r\n  //     {\r\n  //       path: '/login',\r\n  //       icon: <ArrowRightOnRectangleIcon className={submenuIconClasses} />,\r\n  //       name: 'Login',\r\n  //     },\r\n  //     {\r\n  //       path: '/register', //url\r\n  //       icon: <UserIcon className={submenuIconClasses} />, // icon component\r\n  //       name: 'Register', // name that appear in Sidebar\r\n  //     },\r\n  //     {\r\n  //       path: '/forgot-password',\r\n  //       icon: <KeyIcon className={submenuIconClasses} />,\r\n  //       name: 'Forgot Password',\r\n  //     },\r\n  //     {\r\n  //       path: '/app/blank',\r\n  //       icon: <DocumentIcon className={submenuIconClasses} />,\r\n  //       name: 'Blank Page',\r\n  //     },\r\n  //     {\r\n  //       path: '/app/404',\r\n  //       icon: <ExclamationTriangleIcon className={submenuIconClasses} />,\r\n  //       name: '404',\r\n  //     },\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   path: '', //no url needed as this has submenu\r\n  //   icon: <Cog6ToothIcon className={`${iconClasses} inline`} />, // icon component\r\n  //   name: 'Settings', // name that appear in Sidebar\r\n  //   submenu: [\r\n  //     {\r\n  //       path: '/app/settings-profile', //url\r\n  //       icon: <UserIcon className={submenuIconClasses} />, // icon component\r\n  //       name: 'Profile', // name that appear in Sidebar\r\n  //     },\r\n  //     {\r\n  //       path: '/app/settings-billing',\r\n  //       icon: <WalletIcon className={submenuIconClasses} />,\r\n  //       name: 'Billing',\r\n  //     },\r\n  //     {\r\n  //       path: '/app/settings-team', // url\r\n  //       icon: <UsersIcon className={submenuIconClasses} />, // icon component\r\n  //       name: 'Team Members', // name that appear in Sidebar\r\n  //     },\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   path: '', //no url needed as this has submenu\r\n  //   icon: <DocumentTextIcon className={`${iconClasses} inline`} />, // icon component\r\n  //   name: 'Documentation', // name that appear in Sidebar\r\n  //   submenu: [\r\n  //     {\r\n  //       path: '/app/getting-started', // url\r\n  //       icon: <DocumentTextIcon className={submenuIconClasses} />, // icon component\r\n  //       name: 'Getting Started', // name that appear in Sidebar\r\n  //     },\r\n  //     {\r\n  //       path: '/app/features',\r\n  //       icon: <TableCellsIcon className={submenuIconClasses} />,\r\n  //       name: 'Features',\r\n  //     },\r\n  //     {\r\n  //       path: '/app/components',\r\n  //       icon: <CodeBracketSquareIcon className={submenuIconClasses} />,\r\n  //       name: 'Components',\r\n  //     }\r\n  //   ]\r\n  // },\r\n\r\n]\r\n\r\nexport default routes\r\n\r\n\r\n","import ChevronDownIcon from  '@heroicons/react/24/outline/ChevronDownIcon'\r\nimport {useEffect, useState} from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction SidebarSubmenu({submenu, name, icon}){\r\n    const location = useLocation()\r\n    const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n\r\n    /** Open Submenu list if path found in routes, this is for directly loading submenu routes  first time */\r\n    useEffect(() => {\r\n        if(submenu.filter(m => {return m.path === location.pathname})[0])setIsExpanded(true)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='flex-col'>\r\n\r\n            {/** Route header */}\r\n            <div className='w-full' onClick={() => setIsExpanded(!isExpanded)}>\r\n                {icon} {name} \r\n                <ChevronDownIcon className={'w-5 h-5 mt-1 float-right delay-400 duration-500 transition-all  ' + (isExpanded ? 'rotate-180' : '')}/>\r\n            </div>\r\n\r\n            {/** Submenu list */}\r\n            <div className={` w-full `+ (isExpanded ? \"\" : \"hidden\")}>\r\n                <ul className={`menu menu-compact`}>\r\n                {\r\n                    submenu.map((m, k) => {\r\n                        return(\r\n                            <li key={k}>\r\n                                <Link to={m.path}>\r\n                                    {m.icon} {m.name}\r\n                                    {\r\n                                            location.pathname == m.path ? (<span className=\"absolute mt-1 mb-1 inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                aria-hidden=\"true\"></span>) : null\r\n                                    }\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarSubmenu","import routes from '../routes/sidebar'\r\nimport { NavLink, Routes, Link, useLocation } from 'react-router-dom'\r\nimport SidebarSubmenu from './SidebarSubmenu';\r\n\r\nfunction LeftSidebar() {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className=\"drawer-side \">\r\n            <label htmlFor=\"left-sidebar-drawer\" className=\"drawer-overlay\"></label>\r\n            <ul className=\"menu  pt-2 w-80 bg-base-100 text-base-content\">\r\n                <li className=\"mb-2 font-semibold text-xl\">\r\n\r\n                    <Link to={'/app/settings-team'}>PayRu</Link> </li>\r\n                {\r\n                    routes.map((route, k) => {\r\n                        return (\r\n                            <li className=\"\" key={k}>\r\n                                {\r\n                                    route.submenu ?\r\n                                        <SidebarSubmenu {...route} /> :\r\n                                        (<NavLink\r\n                                            end\r\n                                            to={route.path}\r\n                                            className={({ isActive }) => `${isActive ? 'font-semibold  bg-base-200 ' : 'font-normal'}`} >\r\n                                            {route.icon} {route.name}\r\n                                            {\r\n                                                location.pathname === route.path ? (<span className=\"absolute inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                    aria-hidden=\"true\"></span>) : null\r\n                                            }\r\n                                        </NavLink>)\r\n                                }\r\n\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSidebar","function NotificationBodyRightDrawer(){\r\n    return(\r\n        <>\r\n             {\r\n                [...Array(15)].map((_, i) => {\r\n                    return <div key={i} className={\"grid mt-3 card bg-base-200 rounded-box p-3\" + (i < 5 ? \" bg-blue-100\" : \"\")}>\r\n                            {i % 2 === 0 ? `Your sales has increased by 30% yesterday` : `Total likes for instagram post - New launch this week,  has crossed 100k `}\r\n                        </div> \r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationBodyRightDrawer","import XMarkIcon  from '@heroicons/react/24/solid/XMarkIcon'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport NotificationBodyRightDrawer from '../features/common/components/NotificationBodyRightDrawer'\r\nimport { closeRightDrawer } from '../features/common/rightDrawerSlice'\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\n\r\n\r\nfunction RightSidebar(){\r\n\r\n    const {isOpen, bodyType, extraObject, header} = useSelector(state => state.rightDrawer)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n      dispatch(closeRightDrawer(e))\r\n    }\r\n\r\n      \r\n\r\n    return(\r\n        <div className={\" fixed overflow-hidden z-20 bg-gray-900 bg-opacity-25 inset-0 transform ease-in-out \" + (isOpen ? \" transition-opacity opacity-100 duration-500 translate-x-0  \" : \" transition-all delay-500 opacity-0 translate-x-full  \")}>\r\n      \r\n            <section className={ \"w-80 md:w-96  right-0 absolute bg-base-100 h-full shadow-xl delay-400 duration-500 ease-in-out transition-all transform  \" + (isOpen ? \" translate-x-0 \" : \" translate-x-full \")}>\r\n                \r\n                    <div className=\"relative  pb-5 flex flex-col  h-full\">\r\n                        \r\n                        {/* Header */}\r\n                        <div className=\"navbar   flex pl-4 pr-4   shadow-md \">\r\n                            <button className=\"float-left btn btn-circle btn-outline btn-sm\" onClick={() => close()}>\r\n                            <XMarkIcon className=\"h-5 w-5\"/>\r\n                            </button>\r\n                            <span className=\"ml-2 font-bold text-xl\">{header}</span>\r\n                        </div>\r\n\r\n\r\n                        {/* ------------------ Content Start ------------------ */}\r\n                        <div className=\"overflow-y-scroll pl-4 pr-4\">\r\n                            <div className=\"flex flex-col w-full\">\r\n                            {/* Loading drawer body according to different drawer type */}\r\n                            {\r\n                                {\r\n                                        [RIGHT_DRAWER_TYPES.NOTIFICATION] : <NotificationBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,\r\n                                        [RIGHT_DRAWER_TYPES.DEFAULT] : <div></div>\r\n                                }[bodyType]\r\n                            }\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        {/* ------------------ Content End ------------------ */}\r\n                    </div>\r\n\r\n            </section>\r\n\r\n            <section className=\" w-screen h-full cursor-pointer \" onClick={() => close()} ></section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSidebar","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport InputText from '../../../components/Input/InputText'\r\nimport ErrorText from '../../../components/Typography/ErrorText'\r\nimport { showNotification } from \"../../common/headerSlice\"\r\nimport { addNewLead } from \"../leadSlice\"\r\n\r\nconst INITIAL_LEAD_OBJ = {\r\n    first_name : \"\",\r\n    last_name : \"\",\r\n    email : \"\"\r\n}\r\n\r\nfunction AddLeadModalBody({closeModal}){\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ)\r\n\r\n\r\n    const saveNewLead = () => {\r\n        if(leadObj.first_name.trim() === \"\")return setErrorMessage(\"First Name is required!\")\r\n        else if(leadObj.email.trim() === \"\")return setErrorMessage(\"Email id is required!\")\r\n        else{\r\n            let newLeadObj = {\r\n                \"id\": 7,\r\n                \"email\": leadObj.email,\r\n                \"first_name\": leadObj.first_name,\r\n                \"last_name\": leadObj.last_name,\r\n                \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r\n            }\r\n            dispatch(addNewLead({newLeadObj}))\r\n            dispatch(showNotification({message : \"New Lead Added!\", status : 1}))\r\n            closeModal()\r\n        }\r\n    }\r\n\r\n    const updateFormValue = ({updateType, value}) => {\r\n        setErrorMessage(\"\")\r\n        setLeadObj({...leadObj, [updateType] : value})\r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.first_name} updateType=\"first_name\" containerStyle=\"mt-4\" labelTitle=\"First Name\" updateFormValue={updateFormValue}/>\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.last_name} updateType=\"last_name\" containerStyle=\"mt-4\" labelTitle=\"Last Name\" updateFormValue={updateFormValue}/>\r\n\r\n            <InputText type=\"email\" defaultValue={leadObj.email} updateType=\"email\" containerStyle=\"mt-4\" labelTitle=\"Email Id\" updateFormValue={updateFormValue}/>\r\n\r\n\r\n            <ErrorText styleClass=\"mt-16\">{errorMessage}</ErrorText>\r\n            <div className=\"modal-action\">\r\n                <button  className=\"btn btn-ghost\" onClick={() => closeModal()}>Cancel</button>\r\n                <button  className=\"btn btn-primary px-6\" onClick={() => saveNewLead()}>Save</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLeadModalBody","import { useEffect } from 'react'\r\nimport { MODAL_BODY_TYPES } from '../utils/globalConstantUtil'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { closeModal } from '../features/common/modalSlice'\r\nimport AddLeadModalBody from '../features/leads/components/AddLeadModalBody'\r\n\r\n\r\nfunction ModalLayout(){\r\n\r\n\r\n    const {isOpen, bodyType, size, extraObject, title} = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n      dispatch(closeModal(e))\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        {/* The button to open modal */}\r\n\r\n            {/* Put this part before </body> tag */}\r\n            <div className={`modal ${isOpen ? \"modal-open\" : \"\"}`}>\r\n            <div className={`modal-box  ${size === 'lg' ? 'max-w-5xl' : ''}`}>\r\n                <button className=\"btn btn-sm btn-circle absolute right-2 top-2\" onClick={() => close()}>✕</button>\r\n                <h3 className=\"font-semibold text-2xl pb-6 text-center\">{title}</h3>\r\n\r\n\r\n                {/* Loading modal body according to different modal type */}\r\n                {\r\n                    {\r\n                             [MODAL_BODY_TYPES.LEAD_ADD_NEW] : <AddLeadModalBody closeModal={close} extraObject={extraObject}/>,\r\n                             [MODAL_BODY_TYPES.DEFAULT] : <div></div>\r\n                    }[bodyType]\r\n                }\r\n            </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default ModalLayout","import PageContent from \"./PageContent\"\r\nimport LeftSidebar from \"./LeftSidebar\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RightSidebar from './RightSidebar'\r\nimport { useEffect } from \"react\"\r\nimport  {  removeNotificationMessage } from \"../features/common/headerSlice\"\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ModalLayout from \"./ModalLayout\"\r\n\r\nfunction Layout(){\r\n  const dispatch = useDispatch()\r\n  const {newNotificationMessage, newNotificationStatus} = useSelector(state => state.header)\r\n\r\n\r\n  useEffect(() => {\r\n      if(newNotificationMessage !== \"\"){\r\n          if(newNotificationStatus === 1)NotificationManager.success(newNotificationMessage, 'Success')\r\n          if(newNotificationStatus === 0)NotificationManager.error( newNotificationMessage, 'Error')\r\n          dispatch(removeNotificationMessage())\r\n      }\r\n  }, [newNotificationMessage])\r\n\r\n    return(\r\n      <>\r\n        { /* Left drawer - containing page content and side bar (always open) */ }\r\n        <div className=\"drawer drawer-mobile\">\r\n            <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <PageContent/>\r\n            <LeftSidebar />\r\n        </div>\r\n\r\n        { /* Right drawer - containing secondary content like notifications list etc.. */ }\r\n        <RightSidebar />\r\n\r\n\r\n        {/** Notification layout container */}\r\n        <NotificationContainer />\r\n\r\n      {/* Modal layout container */}\r\n        <ModalLayout />\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Layout","\r\nmodule.exports = Object.freeze({\r\n    MODAL_BODY_TYPES : {\r\n        USER_DETAIL : \"USER_DETAIL\",\r\n        LEAD_ADD_NEW : \"LEAD_ADD_NEW\",\r\n        DEFAULT : \"\",\r\n    },\r\n\r\n    RIGHT_DRAWER_TYPES : {\r\n        NOTIFICATION : \"NOTIFICATION\",\r\n    }\r\n});\r\n"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","useState","value","setValue","onChange","e","val","target","useDispatch","useSelector","state","header","noOfNotifications","pageTitle","localStorage","getItem","currentTheme","setCurrentTheme","useEffect","themeChange","window","matchMedia","matches","htmlFor","dispatch","onClick","showNotification","message","status","TEAM_MEMBERS","name","avatar","email","role","joinedOn","moment","Date","add","format","lastActive","members","setMembers","FetchAPi","console","log","fetch","response","ok","Error","json","data","customers","TitleCard","map","l","k","createdAt","address","phoneNumber","shopId","ownerName","subscriptionType","subExpireDate","category","ratings","Dashboard","lazy","Welcome","Page404","Blank","Charts","Leads","Integration","Team","Bills","path","component","VendorTeam","mainContentRef","useRef","current","scroll","top","behavior","ref","Suspense","fallback","SuspenseContent","routes","route","key","exact","element","iconClasses","icon","submenu","location","useLocation","isExpanded","setIsExpanded","filter","m","pathname","to","end","isActive","Array","_","i","rightDrawer","isOpen","bodyType","extraObject","close","closeRightDrawer","RIGHT_DRAWER_TYPES","INITIAL_LEAD_OBJ","first_name","last_name","closeModal","errorMessage","setErrorMessage","leadObj","setLeadObj","InputText","ErrorText","trim","newLeadObj","addNewLead","saveNewLead","modal","size","MODAL_BODY_TYPES","newNotificationMessage","newNotificationStatus","NotificationManager","removeNotificationMessage","id","module","exports","Object","freeze","USER_DETAIL","LEAD_ADD_NEW","DEFAULT","NOTIFICATION"],"sourceRoot":""}