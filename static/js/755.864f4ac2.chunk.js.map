{"version":3,"file":"static/js/755.864f4ac2.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Input/InputText.js","components/Typography/ErrorText.js","components/Typography/Subtitle.js","components/Typography/Title.js","components/Typography/HelperText.js","features/documentation/components/DocComponentsContent.js","features/documentation/components/DocComponentsNav.js","features/documentation/components/GettingStartedNav.js","pages/Documentation.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n\r\nfunction TitleCard({ title, children, topMargin, TopSideButtons }) {\r\n  return (\r\n    <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n      {/* Title for Card */}\r\n      <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n        {title}\r\n\r\n        {/* Top side button, show only if present */}\r\n        {\r\n          // TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n        }\r\n      </Subtitle>\r\n\r\n      <div className=\"divider mt-2\"></div>\r\n\r\n      {/** Card Body */}\r\n      <div className='h-full w-full pb-6 bg-base-100'>\r\n        {children}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default TitleCard","import { useState } from \"react\"\r\n\r\n\r\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InputText","function ErrorText({styleClass, children}){\r\n    return(\r\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\r\n    )\r\n}\r\n\r\nexport default ErrorText","function Subtitle({ styleClass, children }) {\r\n    return (\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","function Title({className, children}){\r\n    return(\r\n        <p className={`text-2xl font-bold  ${className}`}>{children}</p>\r\n    )\r\n}\r\n\r\nexport default Title","function HelperText({className, children}){\r\n    return(\r\n        <div className={`text-slate-400 ${className}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default HelperText","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport InputText from '../../../components/Input/InputText'\r\nimport Title from '../../../components/Typography/Title'\r\nimport Subtitle from '../../../components/Typography/Subtitle'\r\nimport ErrorText from '../../../components/Typography/ErrorText'\r\nimport HelperText from '../../../components/Typography/HelperText'\r\n\r\nimport { setPageTitle, showNotification } from '../../common/headerSlice'\r\nimport TitleCard from '../../../components/Cards/TitleCard'\r\n\r\nfunction DocComponentsContent(){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const updateFormValue = () => {\r\n        // Dummy function for input text component\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <article className=\"prose\">\r\n              <h1 className=\"\" >Components</h1>\r\n\r\n                We have added some global components that are used commonly inside the project.\r\n\r\n                {/* Typography*/}\r\n              <h2 id=\"component1\">Typography</h2>\r\n                <div>\r\n                    These components are present under <span className=\"badge mt-0 mb-0 badge-ghost\">/components/Typography</span> folder. It accepts styleClass as props which can be used to pass additional className for style. It has following components which you can import and use it - \r\n                    <div className=\"mockup-code mt-4\">\r\n                    <pre className='my-0 py-0'><code>{'import  Title from \"../components/Typography/Title\"\\n  <Title>Your Title here</Title>'}</code></pre>\r\n                    </div>\r\n                    <ul>\r\n                      <li><span className='font-bold'>Title</span> - Use this component to show title \r\n                      <Title>Title Example</Title>\r\n                       </li>\r\n                      <li><span className='font-bold'>Subtitle</span> - Component that shows text smaller than title \r\n                      <Subtitle styleClass=\"mt-4 mb-6\">Subtitle Example</Subtitle>\r\n                      </li>\r\n                      <li><span className='font-bold'>ErrorText</span> - Used for showing error messages \r\n                      <ErrorText styleClass=\"mt-2\">Error Text Example</ErrorText>\r\n                      </li>\r\n                      <li><span className='font-bold'>HelperText</span> - Used for showing secondary message \r\n                      <HelperText styleClass=\"\">Helper Text Example</HelperText></li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                 {/* Form Input*/}\r\n              <h2 id=\"component2\">Form Input</h2>\r\n                <p>\r\n                      Many times we have to use form input like text, select one or toogle and in every file we have to handle its state management, here we have added global form component that can be used in any file and state variables can be managed by passing props to it. It is present in <span className=\"badge mt-0 mb-0 badge-ghost\">/components/Input</span> folder. \r\n                </p>\r\n                Ex- \r\n                <div className=\"mockup-code mt-4\">\r\n                    <pre className='my-0 py-0'><code>{'const INITIAL_LEAD_OBJ = {\\n   first_name : \"\", \\n   last_name : \"\", \\n   email : \"\" \\n  } \\n   const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ) \\n   const updateFormValue = ({updateType, value}) => {\\n    setErrorMessage(\"\") \\n    setLeadObj({...leadObj, [updateType] : value})\\n   }\\n\\n<InputText type=\"text\" defaultValue={leadObj.first_name}  \\n  updateType=\"first_name\" containerStyle=\"mt-4\"  \\n  labelTitle=\"First Name\" updateFormValue={updateFormValue}/>'}</code></pre>\r\n                </div>\r\n                <InputText type=\"text\" defaultValue={\"input value\"}  updateType=\"first_name\" containerStyle=\"mt-3\" labelTitle=\"Label Title\" updateFormValue={updateFormValue}/>\r\n                \r\n\r\n               <p> This example is from add new lead modal, here we are importing component for creating text input and passing some props to handle its content and state variable. Description of props are as follows - </p>\r\n                <ul>\r\n                  <li><span className='font-bold'>type</span> - Input type value like number, date, time etc.. </li>\r\n                  <li><span className='font-bold'>updateType</span> - This is used to update state variable in parent component</li>\r\n                  <li><span className='font-bold'>containerStyle</span> - Style class for container of input, which include label as well</li>\r\n                  <li><span className='font-bold'>labelTitle</span> - Title of the label</li>\r\n                  <li><span className='font-bold'>updateFormValue</span> - Function of parent component to update state variable</li>\r\n                </ul>\r\n            \r\n\r\n\r\n\r\n                 {/* Cards */}\r\n                 <h2 id=\"component3\">Cards</h2>\r\n                <p>\r\n                    <a href=\"https://daisyui.com/components/card/\" target=\"_blank\">Daisy UI</a> already have many cards layout, on top of that we have added one card component that accept title props and shows children inside its body. Also there is a divider between title and body of card. On more provision has been added to add buttons on top left side of card using TopSideButtons props (check leads page).\r\n\r\n                </p>\r\n                Ex - \r\n                <div className=\"mockup-code mt-4\">\r\n                    <pre className='my-0 py-0'><code>{'<TitleCard title={\"Card Title\"}> <h1>Card Body</h1></TitleCard>'}</code></pre>\r\n                </div>\r\n                <div className='p-8 bg-base-300 rounded-lg mt-4'>\r\n                    <TitleCard title={\"Card Title\"}> <h1>Card Body</h1></TitleCard>\r\n                </div>\r\n\r\n\r\n                 \r\n\r\n                    <div className='h-24'></div>\r\n\r\n\r\n            </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocComponentsContent","import { useState } from \"react\"\r\n\r\nfunction DocComponentsNav({activeIndex}){\r\n\r\n    const SECTION_NAVS = [\r\n        {name : \"Typography\", isActive : activeIndex === 1 ? true : false},\r\n        {name : \"Form Input\", isActive : false},\r\n        {name : \"Cards\", isActive : false},\r\n    ]\r\n    const [navs, setNavs] = useState(SECTION_NAVS)\r\n\r\n    const scrollToSection = (currentIndex) => {\r\n        setNavs(navs.map((n, k) => {\r\n            if(k === currentIndex)return {...n, isActive : true}\r\n            else return {...n, isActive : false}\r\n        }))\r\n        document.getElementById('component'+(currentIndex+1)).scrollIntoView({behavior: 'smooth' })\r\n    }\r\n\r\n    return(\r\n        <ul className=\"menu w-56 mt-10 text-sm\">\r\n            <li className=\"menu-title\"><span className=\"\">Components</span></li>\r\n            \r\n            {\r\n                navs.map((n, k) => {\r\n                    return(\r\n                        <li key={k} onClick={() => scrollToSection(k)} className={n.isActive ? \"bordered\" : \"\"}><a>{n.name}</a></li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default DocComponentsNav","import { useState } from \"react\"\r\n\r\nfunction GettingStartedNav({activeIndex}){\r\n\r\n    const SECTION_NAVS = [\r\n        {name : \"Introduction\", isActive : activeIndex === 1 ? true : false},\r\n        {name : \"How to Use\", isActive : false},\r\n        {name : \"Tailwind CSS\", isActive : false},\r\n        {name : \"Daisy UI\", isActive : false},\r\n        {name : \"Chart JS\", isActive : false},\r\n        {name : \"Redux Toolkit\", isActive : false},\r\n        {name : \"Hero Icons\", isActive : false},\r\n        {name : \"Project Structure\", isActive : false},\r\n    ]\r\n    const [navs, setNavs] = useState(SECTION_NAVS)\r\n\r\n    const scrollToSection = (currentIndex) => {\r\n        setNavs(navs.map((n, k) => {\r\n            if(k === currentIndex)return {...n, isActive : true}\r\n            else return {...n, isActive : false}\r\n        }))\r\n        document.getElementById('getstarted'+(currentIndex+1)).scrollIntoView({behavior: 'smooth' })\r\n    }\r\n\r\n    return(\r\n        <ul className=\"menu w-56 mt-10 text-sm\">\r\n            <li className=\"menu-title\"><span className=\"\">Getting Started</span></li>\r\n            \r\n            {\r\n                navs.map((n, k) => {\r\n                    return(\r\n                        <li key={k} onClick={() => scrollToSection(k)} className={n.isActive ? \"bordered\" : \"\"}><a>{n.name}</a></li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default GettingStartedNav","import {Link} from 'react-router-dom'\r\nimport FeaturesNav from '../features/documentation/components/FeaturesNav'\r\nimport GettingStartedContent from '../features/documentation/components/GettingStartedContent'\r\nimport GettingStartedNav from '../features/documentation/components/GettingStartedNav'\r\nimport Title from '../components/Typography/Title'\r\nimport DocComponentsNav from '../features/documentation/components/DocComponentsNav'\r\nimport FeaturesContent from '../features/documentation/components/FeaturesContent'\r\nimport DocComponentsContent from '../features/documentation/components/DocComponentsContent'\r\n\r\nfunction Documentation(){\r\n    return(\r\n      <>\r\n             <div className=\"min-h-screen bg-base-200 flex items-center\">\r\n            <div className=\"card mx-auto w-full max-w-4xl  shadow-xl\">\r\n                <div className=\"py-12 p-10 h-screen flex overflow-hidden  bg-base-100 rounded-xl\" >\r\n                        <div className=\"flex-none p-4 overflow-y-scroll gap-6 \">\r\n                            <h1 className='text-3xl font-bold mb-2'>Dashwind</h1>\r\n                            <Link to=\"/login\"><button type=\"submit\" className={\"btn normal-case btn-xs btn-primary\"}>Live Preview</button></Link>\r\n                            \r\n                            <GettingStartedNav />\r\n                            <FeaturesNav />\r\n                            <DocComponentsNav />\r\n                        </div>\r\n\r\n                        <div className=\"grow pt-16  overflow-y-scroll\">\r\n                            <GettingStartedContent />\r\n                            <FeaturesContent />\r\n                            <DocComponentsContent />\r\n                        </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Documentation"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","useState","value","setValue","onChange","e","val","target","useDispatch","id","Title","Subtitle","ErrorText","InputText","href","TitleCard","SECTION_NAVS","name","isActive","activeIndex","navs","setNavs","map","n","k","onClick","currentIndex","document","getElementById","scrollIntoView","behavior","to"],"sourceRoot":""}